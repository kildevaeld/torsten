// Code generated by "stringer -type Bitmask Bitmask.go"; DO NOT EDIT

package sqlmeta

import "fmt"

const (
	_Bitmask_name_0 = "OTHER_DELETEOTHER_WRITE"
	_Bitmask_name_1 = "OTHER_READ"
	_Bitmask_name_2 = "GROUP_DELETE"
	_Bitmask_name_3 = "GROUP_WRITE"
	_Bitmask_name_4 = "GROUP_READ"
	_Bitmask_name_5 = "OWNER_DELETE"
	_Bitmask_name_6 = "OWNER_WRITE"
	_Bitmask_name_7 = "OWNER_READ"
)

var (
	_Bitmask_index_0 = [...]uint8{0, 12, 23}
	_Bitmask_index_1 = [...]uint8{0, 10}
	_Bitmask_index_2 = [...]uint8{0, 12}
	_Bitmask_index_3 = [...]uint8{0, 11}
	_Bitmask_index_4 = [...]uint8{0, 10}
	_Bitmask_index_5 = [...]uint8{0, 12}
	_Bitmask_index_6 = [...]uint8{0, 11}
	_Bitmask_index_7 = [...]uint8{0, 10}
)

func (i Bitmask) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Bitmask_name_0[_Bitmask_index_0[i]:_Bitmask_index_0[i+1]]
	case i == 4:
		return _Bitmask_name_1
	case i == 8:
		return _Bitmask_name_2
	case i == 16:
		return _Bitmask_name_3
	case i == 32:
		return _Bitmask_name_4
	case i == 64:
		return _Bitmask_name_5
	case i == 128:
		return _Bitmask_name_6
	case i == 256:
		return _Bitmask_name_7
	default:
		return fmt.Sprintf("Bitmask(%d)", i)
	}
}
